<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classJSL_1_1PlotData" kind="class" language="C++" prot="public">
    <compoundname>JSL::PlotData</compoundname>
    <includes refid="PlotData_8h" local="no">PlotData.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classJSL_1_1PlotData_1a59b333717ba98216efcd19499eacc6d9" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string JSL::PlotData::DataLocation</definition>
        <argsstring></argsstring>
        <name>DataLocation</name>
        <qualifiedname>JSL::PlotData::DataLocation</qualifiedname>
        <briefdescription>
<para>The file location for the x/y data used in this plot. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="204" column="13" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classJSL_1_1PlotData_1a9c2193e46a79618ee04e4d229f44f20c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int JSL::PlotData::Idx</definition>
        <argsstring></argsstring>
        <name>Idx</name>
        <qualifiedname>JSL::PlotData::Idx</qualifiedname>
        <briefdescription>
<para>The ID of this plot, pretty much only used to generate a default legend (i.e. Plot 1) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="205" column="5" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classJSL_1_1PlotData_1ab84555b21166659535d130f84ac74b42" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string JSL::PlotData::dashType</definition>
        <argsstring></argsstring>
        <name>dashType</name>
        <qualifiedname>JSL::PlotData::dashType</qualifiedname>
        <briefdescription>
<para>The dashType specifier (either for linestyle - dash/solid, or scatterstyle - circle/dot/square etc.) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="206" column="13" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classJSL_1_1PlotData_1a419724bfc1943f5c5efbc7607f9034d1" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceJSL_1a871354b683a8bee0151dbfbbde49beda" kindref="member">PlotType</ref></type>
        <definition>PlotType JSL::PlotData::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>JSL::PlotData::type</qualifiedname>
        <briefdescription>
<para>Denotes either Line plots or scatter plots etc. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="207" column="10" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classJSL_1_1PlotData_1a17ce4f8c1648a676421b39a204b0a37d" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string JSL::PlotData::legend</definition>
        <argsstring></argsstring>
        <name>legend</name>
        <qualifiedname>JSL::PlotData::legend</qualifiedname>
        <briefdescription>
<para>The name associated with this data on the legend. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="208" column="13" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classJSL_1_1PlotData_1a2936bcc90d54c471f31388e2673081b3" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string JSL::PlotData::colour</definition>
        <argsstring></argsstring>
        <name>colour</name>
        <qualifiedname>JSL::PlotData::colour</qualifiedname>
        <briefdescription>
<para>The colour used to plot the data - if not specified, uses the default gnuplot colour roster. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="209" column="13" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classJSL_1_1PlotData_1a91bf6edbf9d8a28cf5255aa1ed74948c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int JSL::PlotData::penSize</definition>
        <argsstring></argsstring>
        <name>penSize</name>
        <qualifiedname>JSL::PlotData::penSize</qualifiedname>
        <briefdescription>
<para>The thickness of the pen used to write the data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="210" column="5" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classJSL_1_1PlotData_1acefcd21025b95d2f76313dfd578bb25f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>JSL::PlotData::PlotData</definition>
        <argsstring>(std::string data, int idx, PlotType t, NameValuePair&lt; Ts &gt;... args)</argsstring>
        <name>PlotData</name>
        <qualifiedname>JSL::PlotData::PlotData</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type><ref refid="namespaceJSL_1a871354b683a8bee0151dbfbbde49beda" kindref="member">PlotType</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="structJSL_1_1NameValuePair" kindref="compound">NameValuePair</ref>&lt; Ts &gt;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The relative filepath to the location where the associated data is stored.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the data (and the index of this object within the <ref refid="classJSL_1_1Axis_1a493f7f5899d5e867ade59af8e10e95bd" kindref="member">Axis::Data</ref> vector).</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>A variadic list of <ref refid="structJSL_1_1NameValuePair" kindref="compound">JSL::NameValuePair</ref> objects used for pre-facto changes to the line style </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="59" column="1" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="59" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classJSL_1_1PlotData_1a67c6db4673dc35b4433e26dc9259a22f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void JSL::PlotData::SetColour</definition>
        <argsstring>(T v)</argsstring>
        <name>SetColour</name>
        <qualifiedname>JSL::PlotData::SetColour</qualifiedname>
        <param>
          <type>T</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Default template function - used to throw error messages if innapropriate colour specifications used. <bold>Note the spelling of colour!!</bold> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="72" column="6" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classJSL_1_1PlotData_1af350ddfe10bf959868087490d58cc6f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void JSL::PlotData::SetColour</definition>
        <argsstring>(std::string c)</argsstring>
        <name>SetColour</name>
        <qualifiedname>JSL::PlotData::SetColour</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Sets the colour value of the line to the given string. No checks are made that this string corresponds to a valid gnuplot colour.**Note the spelling of colour!!**. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="77" column="6" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classJSL_1_1PlotData_1a04b4ee30bc1c289bc956bead3ad016da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void JSL::PlotData::SetColour</definition>
        <argsstring>(const char *c)</argsstring>
        <name>SetColour</name>
        <qualifiedname>JSL::PlotData::SetColour</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>SetColour override for c-style string - simple converts to std::string then calls <ref refid="classJSL_1_1PlotData_1af350ddfe10bf959868087490d58cc6f6" kindref="member">SetColour(std::string c)</ref> <bold>Note the spelling of colour!!</bold> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="82" column="6" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classJSL_1_1PlotData_1a433b879e54d8ab172d6b3a73600ff1df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void JSL::PlotData::SetColour</definition>
        <argsstring>(unsigned int r, unsigned int g, unsigned int b)</argsstring>
        <name>SetColour</name>
        <qualifiedname>JSL::PlotData::SetColour</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>g</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Sets the colour to that specified by the RGB value, converting it into a gnuplot-readable format <bold>Note the spelling of colour!!</bold> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>The red value (between 0 and 255)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>The green value (between 0 and 255)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>The blue value (between 0 and 255) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="87" column="6" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="87" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classJSL_1_1PlotData_1af96df168f1f17d3405e7c630ea6e1649" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void JSL::PlotData::SetColour</definition>
        <argsstring>(std::vector&lt; unsigned int &gt; cs)</argsstring>
        <name>SetColour</name>
        <qualifiedname>JSL::PlotData::SetColour</qualifiedname>
        <param>
          <type>std::vector&lt; unsigned int &gt;</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
<para>Sets the colour to that specified by the RGB value <bold>Note the spelling of colour!!</bold> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cs</parametername>
</parameternamelist>
<parameterdescription>
<para>A length-three vector corresponding to RGB values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="93" column="6" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="93" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classJSL_1_1PlotData_1acb517655ae4ab52c1512fd48c0589d31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void JSL::PlotData::SetPenSize</definition>
        <argsstring>(T v)</argsstring>
        <name>SetPenSize</name>
        <qualifiedname>JSL::PlotData::SetPenSize</qualifiedname>
        <param>
          <type>T</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Default template function - used to throw error messages if innapropriate pensize specifications used. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="100" column="6" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classJSL_1_1PlotData_1aed7875d8ef940f0e1c0ec9321fc03001" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void JSL::PlotData::SetPenSize</definition>
        <argsstring>(int l)</argsstring>
        <name>SetPenSize</name>
        <qualifiedname>JSL::PlotData::SetPenSize</qualifiedname>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Sets the width of the pen used to draw lines (and also the thickness of scatter-points) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="106" column="6" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classJSL_1_1PlotData_1a3e8e3327c8d29e55468709a1d02f554e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void JSL::PlotData::SetPenType</definition>
        <argsstring>(T v)</argsstring>
        <name>SetPenType</name>
        <qualifiedname>JSL::PlotData::SetPenType</qualifiedname>
        <param>
          <type>T</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Default template function - used to throw error messages if innapropriate pen type specification used. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="113" column="6" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classJSL_1_1PlotData_1aa12ffd19507678e013db6a221a0c5849" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void JSL::PlotData::SetPenType</definition>
        <argsstring>(JSL::LineType t)</argsstring>
        <name>SetPenType</name>
        <qualifiedname>JSL::PlotData::SetPenType</qualifiedname>
        <param>
          <type><ref refid="namespaceJSL_1acbabfae0b320d418d49485b7c50bc355" kindref="member">JSL::LineType</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Sets the LineType (dashed, solid, etc) for the object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="namespaceJSL_1acbabfae0b320d418d49485b7c50bc355" kindref="member">JSL::LineType</ref> specifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="119" column="6" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="119" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classJSL_1_1PlotData_1a30cf21f46a1911587a4381bfb40c3403" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void JSL::PlotData::SetScatterType</definition>
        <argsstring>(T t)</argsstring>
        <name>SetScatterType</name>
        <qualifiedname>JSL::PlotData::SetScatterType</qualifiedname>
        <param>
          <type>T</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Default template function - used to throw error messages if innapropriate scatter type specification used. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="147" column="6" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="147" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classJSL_1_1PlotData_1a677bd22e71e15894d5ac1d5fa652236b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void JSL::PlotData::SetScatterType</definition>
        <argsstring>(ScatterType t)</argsstring>
        <name>SetScatterType</name>
        <qualifiedname>JSL::PlotData::SetScatterType</qualifiedname>
        <param>
          <type><ref refid="namespaceJSL_1a086efb36ddb107d45961a6b46932c526" kindref="member">ScatterType</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Sets the LineType (circle, dot, square) for the object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="namespaceJSL_1a086efb36ddb107d45961a6b46932c526" kindref="member">JSL::ScatterType</ref> specifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="154" column="6" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="154" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classJSL_1_1PlotData_1a24fa5385585f0eaa2777072ef2d818c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void JSL::PlotData::SetLegend</definition>
        <argsstring>(T t)</argsstring>
        <name>SetLegend</name>
        <qualifiedname>JSL::PlotData::SetLegend</qualifiedname>
        <param>
          <type>T</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Default template function - used to throw error messages if innapropriate specification used. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="161" column="6" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classJSL_1_1PlotData_1a5e2c9a97035e97e3658c8bcc2913dab3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void JSL::PlotData::SetLegend</definition>
        <argsstring>(std::string s)</argsstring>
        <name>SetLegend</name>
        <qualifiedname>JSL::PlotData::SetLegend</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Sets the name for this plot on the legend. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="167" column="6" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classJSL_1_1PlotData_1a34c9a6d891f3434c13f9fd1e604e734c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string JSL::PlotData::Write</definition>
        <argsstring>()</argsstring>
        <name>Write</name>
        <qualifiedname>JSL::PlotData::Write</qualifiedname>
        <briefdescription>
<para>Formats the internal data and writes it to a string for use in a gnuplot script. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A string containing the necessary data to plot the internal data </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="173" column="13" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="173" bodyend="202"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classJSL_1_1PlotData_1ab25bd54000960736d1c2687fc52b8bcc" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void JSL::PlotData::DefaultInit</definition>
        <argsstring>()</argsstring>
        <name>DefaultInit</name>
        <qualifiedname>JSL::PlotData::DefaultInit</qualifiedname>
        <briefdescription>
<para>Sets the default values of the members. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="213" column="6" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="213" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classJSL_1_1PlotData_1a0cb1885e91da9457fd684a60547e66d0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void JSL::PlotData::ParseLoop</definition>
        <argsstring>(NameValuePair&lt; T &gt; n1, NameValuePair&lt; Ts &gt;... ns)</argsstring>
        <name>ParseLoop</name>
        <qualifiedname>JSL::PlotData::ParseLoop</qualifiedname>
        <param>
          <type><ref refid="structJSL_1_1NameValuePair" kindref="compound">NameValuePair</ref>&lt; T &gt;</type>
          <declname>n1</declname>
        </param>
        <param>
          <type><ref refid="structJSL_1_1NameValuePair" kindref="compound">NameValuePair</ref>&lt; Ts &gt;...</type>
          <declname>ns</declname>
        </param>
        <briefdescription>
<para>Variadic function which parses the JSL::NameValuePairs provided to the function for pre-facto modification. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="234" column="6" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="234" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classJSL_1_1PlotData_1a2e57942c52c4ec76436bd3179e4ee2cd" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void JSL::PlotData::ParseNVPair</definition>
        <argsstring>(NameValuePair&lt; T &gt; nv)</argsstring>
        <name>ParseNVPair</name>
        <qualifiedname>JSL::PlotData::ParseNVPair</qualifiedname>
        <param>
          <type><ref refid="structJSL_1_1NameValuePair" kindref="compound">NameValuePair</ref>&lt; T &gt;</type>
          <declname>nv</declname>
        </param>
        <briefdescription>
<para>Given a <ref refid="structJSL_1_1NameValuePair" kindref="compound">JSL::NameValuePair</ref> object, attempt to interpret it, given the Name value, passing the Value portion to the relevant templated function outlined above. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="244" column="6" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="244" bodyend="271"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A holder class for the datalocation, and line specification for each plot added to an axis. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" line="53" column="1" bodyfile="/Users/jf20/Documents/JSL/gnuplot/PlotData.h" bodystart="54" bodyend="272"/>
    <listofallmembers>
      <member refid="classJSL_1_1PlotData_1a2936bcc90d54c471f31388e2673081b3" prot="private" virt="non-virtual"><scope>JSL::PlotData</scope><name>colour</name></member>
      <member refid="classJSL_1_1PlotData_1ab84555b21166659535d130f84ac74b42" prot="private" virt="non-virtual"><scope>JSL::PlotData</scope><name>dashType</name></member>
      <member refid="classJSL_1_1PlotData_1a59b333717ba98216efcd19499eacc6d9" prot="private" virt="non-virtual"><scope>JSL::PlotData</scope><name>DataLocation</name></member>
      <member refid="classJSL_1_1PlotData_1ab25bd54000960736d1c2687fc52b8bcc" prot="private" virt="non-virtual"><scope>JSL::PlotData</scope><name>DefaultInit</name></member>
      <member refid="classJSL_1_1PlotData_1a9c2193e46a79618ee04e4d229f44f20c" prot="private" virt="non-virtual"><scope>JSL::PlotData</scope><name>Idx</name></member>
      <member refid="classJSL_1_1PlotData_1a17ce4f8c1648a676421b39a204b0a37d" prot="private" virt="non-virtual"><scope>JSL::PlotData</scope><name>legend</name></member>
      <member refid="classJSL_1_1PlotData_1a0cb1885e91da9457fd684a60547e66d0" prot="private" virt="non-virtual"><scope>JSL::PlotData</scope><name>ParseLoop</name></member>
      <member refid="classJSL_1_1PlotData_1a2e57942c52c4ec76436bd3179e4ee2cd" prot="private" virt="non-virtual"><scope>JSL::PlotData</scope><name>ParseNVPair</name></member>
      <member refid="classJSL_1_1PlotData_1a91bf6edbf9d8a28cf5255aa1ed74948c" prot="private" virt="non-virtual"><scope>JSL::PlotData</scope><name>penSize</name></member>
      <member refid="classJSL_1_1PlotData_1acefcd21025b95d2f76313dfd578bb25f" prot="public" virt="non-virtual"><scope>JSL::PlotData</scope><name>PlotData</name></member>
      <member refid="classJSL_1_1PlotData_1a67c6db4673dc35b4433e26dc9259a22f" prot="public" virt="non-virtual"><scope>JSL::PlotData</scope><name>SetColour</name></member>
      <member refid="classJSL_1_1PlotData_1af350ddfe10bf959868087490d58cc6f6" prot="public" virt="non-virtual"><scope>JSL::PlotData</scope><name>SetColour</name></member>
      <member refid="classJSL_1_1PlotData_1a04b4ee30bc1c289bc956bead3ad016da" prot="public" virt="non-virtual"><scope>JSL::PlotData</scope><name>SetColour</name></member>
      <member refid="classJSL_1_1PlotData_1a433b879e54d8ab172d6b3a73600ff1df" prot="public" virt="non-virtual"><scope>JSL::PlotData</scope><name>SetColour</name></member>
      <member refid="classJSL_1_1PlotData_1af96df168f1f17d3405e7c630ea6e1649" prot="public" virt="non-virtual"><scope>JSL::PlotData</scope><name>SetColour</name></member>
      <member refid="classJSL_1_1PlotData_1a24fa5385585f0eaa2777072ef2d818c2" prot="public" virt="non-virtual"><scope>JSL::PlotData</scope><name>SetLegend</name></member>
      <member refid="classJSL_1_1PlotData_1a5e2c9a97035e97e3658c8bcc2913dab3" prot="public" virt="non-virtual"><scope>JSL::PlotData</scope><name>SetLegend</name></member>
      <member refid="classJSL_1_1PlotData_1acb517655ae4ab52c1512fd48c0589d31" prot="public" virt="non-virtual"><scope>JSL::PlotData</scope><name>SetPenSize</name></member>
      <member refid="classJSL_1_1PlotData_1aed7875d8ef940f0e1c0ec9321fc03001" prot="public" virt="non-virtual"><scope>JSL::PlotData</scope><name>SetPenSize</name></member>
      <member refid="classJSL_1_1PlotData_1a3e8e3327c8d29e55468709a1d02f554e" prot="public" virt="non-virtual"><scope>JSL::PlotData</scope><name>SetPenType</name></member>
      <member refid="classJSL_1_1PlotData_1aa12ffd19507678e013db6a221a0c5849" prot="public" virt="non-virtual"><scope>JSL::PlotData</scope><name>SetPenType</name></member>
      <member refid="classJSL_1_1PlotData_1a30cf21f46a1911587a4381bfb40c3403" prot="public" virt="non-virtual"><scope>JSL::PlotData</scope><name>SetScatterType</name></member>
      <member refid="classJSL_1_1PlotData_1a677bd22e71e15894d5ac1d5fa652236b" prot="public" virt="non-virtual"><scope>JSL::PlotData</scope><name>SetScatterType</name></member>
      <member refid="classJSL_1_1PlotData_1a419724bfc1943f5c5efbc7607f9034d1" prot="private" virt="non-virtual"><scope>JSL::PlotData</scope><name>type</name></member>
      <member refid="classJSL_1_1PlotData_1a34c9a6d891f3434c13f9fd1e604e734c" prot="public" virt="non-virtual"><scope>JSL::PlotData</scope><name>Write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
